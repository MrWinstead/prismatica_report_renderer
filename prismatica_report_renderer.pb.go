// Code generated by protoc-gen-go. DO NOT EDIT.
// source: prismatica_report_renderer.proto

/*
Package prismatica_report_renderer is a generated protocol buffer package.

It is generated from these files:
	prismatica_report_renderer.proto

It has these top-level messages:
	TemplateRegistrationRequest
	TemplateRegistrationResponse
	RenderRequest
	RenderResponse
*/
package prismatica_report_renderer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TemplateRegistrationRequest struct {
	Timestamp *google_protobuf.Timestamp `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp,omitempty"`
	RequestId string                     `protobuf:"bytes,2,opt,name=requestId" json:"requestId,omitempty"`
	Template  string                     `protobuf:"bytes,3,opt,name=template" json:"template,omitempty"`
}

func (m *TemplateRegistrationRequest) Reset()                    { *m = TemplateRegistrationRequest{} }
func (m *TemplateRegistrationRequest) String() string            { return proto.CompactTextString(m) }
func (*TemplateRegistrationRequest) ProtoMessage()               {}
func (*TemplateRegistrationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *TemplateRegistrationRequest) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *TemplateRegistrationRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *TemplateRegistrationRequest) GetTemplate() string {
	if m != nil {
		return m.Template
	}
	return ""
}

type TemplateRegistrationResponse struct {
	RequestId  string `protobuf:"bytes,1,opt,name=requestId" json:"requestId,omitempty"`
	TemplateId string `protobuf:"bytes,2,opt,name=templateId" json:"templateId,omitempty"`
}

func (m *TemplateRegistrationResponse) Reset()                    { *m = TemplateRegistrationResponse{} }
func (m *TemplateRegistrationResponse) String() string            { return proto.CompactTextString(m) }
func (*TemplateRegistrationResponse) ProtoMessage()               {}
func (*TemplateRegistrationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TemplateRegistrationResponse) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *TemplateRegistrationResponse) GetTemplateId() string {
	if m != nil {
		return m.TemplateId
	}
	return ""
}

type RenderRequest struct {
	Timestamp          *google_protobuf.Timestamp `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp,omitempty"`
	RequestId          string                     `protobuf:"bytes,2,opt,name=requestId" json:"requestId,omitempty"`
	TemplateId         string                     `protobuf:"bytes,3,opt,name=templateId" json:"templateId,omitempty"`
	RenderingVariables map[string]string          `protobuf:"bytes,4,rep,name=renderingVariables" json:"renderingVariables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *RenderRequest) Reset()                    { *m = RenderRequest{} }
func (m *RenderRequest) String() string            { return proto.CompactTextString(m) }
func (*RenderRequest) ProtoMessage()               {}
func (*RenderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RenderRequest) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *RenderRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *RenderRequest) GetTemplateId() string {
	if m != nil {
		return m.TemplateId
	}
	return ""
}

func (m *RenderRequest) GetRenderingVariables() map[string]string {
	if m != nil {
		return m.RenderingVariables
	}
	return nil
}

type RenderResponse struct {
	RequestId string `protobuf:"bytes,1,opt,name=requestId" json:"requestId,omitempty"`
	Result    string `protobuf:"bytes,2,opt,name=result" json:"result,omitempty"`
}

func (m *RenderResponse) Reset()                    { *m = RenderResponse{} }
func (m *RenderResponse) String() string            { return proto.CompactTextString(m) }
func (*RenderResponse) ProtoMessage()               {}
func (*RenderResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RenderResponse) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *RenderResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*TemplateRegistrationRequest)(nil), "prismatica_report_renderer.TemplateRegistrationRequest")
	proto.RegisterType((*TemplateRegistrationResponse)(nil), "prismatica_report_renderer.TemplateRegistrationResponse")
	proto.RegisterType((*RenderRequest)(nil), "prismatica_report_renderer.RenderRequest")
	proto.RegisterType((*RenderResponse)(nil), "prismatica_report_renderer.RenderResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PrismaticaReportRenderer service

type PrismaticaReportRendererClient interface {
	Render(ctx context.Context, in *RenderRequest, opts ...grpc.CallOption) (*RenderResponse, error)
	RegisterTemplate(ctx context.Context, in *TemplateRegistrationRequest, opts ...grpc.CallOption) (*TemplateRegistrationResponse, error)
}

type prismaticaReportRendererClient struct {
	cc *grpc.ClientConn
}

func NewPrismaticaReportRendererClient(cc *grpc.ClientConn) PrismaticaReportRendererClient {
	return &prismaticaReportRendererClient{cc}
}

func (c *prismaticaReportRendererClient) Render(ctx context.Context, in *RenderRequest, opts ...grpc.CallOption) (*RenderResponse, error) {
	out := new(RenderResponse)
	err := grpc.Invoke(ctx, "/prismatica_report_renderer.PrismaticaReportRenderer/Render", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *prismaticaReportRendererClient) RegisterTemplate(ctx context.Context, in *TemplateRegistrationRequest, opts ...grpc.CallOption) (*TemplateRegistrationResponse, error) {
	out := new(TemplateRegistrationResponse)
	err := grpc.Invoke(ctx, "/prismatica_report_renderer.PrismaticaReportRenderer/RegisterTemplate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PrismaticaReportRenderer service

type PrismaticaReportRendererServer interface {
	Render(context.Context, *RenderRequest) (*RenderResponse, error)
	RegisterTemplate(context.Context, *TemplateRegistrationRequest) (*TemplateRegistrationResponse, error)
}

func RegisterPrismaticaReportRendererServer(s *grpc.Server, srv PrismaticaReportRendererServer) {
	s.RegisterService(&_PrismaticaReportRenderer_serviceDesc, srv)
}

func _PrismaticaReportRenderer_Render_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PrismaticaReportRendererServer).Render(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prismatica_report_renderer.PrismaticaReportRenderer/Render",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PrismaticaReportRendererServer).Render(ctx, req.(*RenderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PrismaticaReportRenderer_RegisterTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TemplateRegistrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PrismaticaReportRendererServer).RegisterTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/prismatica_report_renderer.PrismaticaReportRenderer/RegisterTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PrismaticaReportRendererServer).RegisterTemplate(ctx, req.(*TemplateRegistrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PrismaticaReportRenderer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "prismatica_report_renderer.PrismaticaReportRenderer",
	HandlerType: (*PrismaticaReportRendererServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Render",
			Handler:    _PrismaticaReportRenderer_Render_Handler,
		},
		{
			MethodName: "RegisterTemplate",
			Handler:    _PrismaticaReportRenderer_RegisterTemplate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "prismatica_report_renderer.proto",
}

func init() { proto.RegisterFile("prismatica_report_renderer.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 399 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x93, 0x4d, 0xeb, 0xd3, 0x40,
	0x10, 0xc6, 0x4d, 0xa2, 0xc5, 0x4e, 0x51, 0xca, 0x22, 0x1a, 0x62, 0xd1, 0x90, 0x53, 0x15, 0x4c,
	0xa0, 0x1e, 0x0c, 0xbd, 0x29, 0x54, 0xf0, 0x56, 0x96, 0xe2, 0x41, 0x84, 0xb2, 0x69, 0xc7, 0xb8,
	0x9a, 0x64, 0xd3, 0xdd, 0x8d, 0xd0, 0x4f, 0xd0, 0xb3, 0x1f, 0xc9, 0x6f, 0x26, 0x66, 0x93, 0xf4,
	0x85, 0xb6, 0xd4, 0xc3, 0xff, 0xb6, 0xb3, 0x79, 0xe6, 0xb7, 0xcf, 0xbc, 0x04, 0xfc, 0x52, 0x72,
	0x95, 0x33, 0xcd, 0x57, 0x6c, 0x29, 0xb1, 0x14, 0x52, 0x2f, 0x25, 0x16, 0x6b, 0x94, 0x28, 0xc3,
	0x52, 0x0a, 0x2d, 0x88, 0x77, 0x59, 0xe1, 0xbd, 0x4c, 0x85, 0x48, 0x33, 0x8c, 0x6a, 0x65, 0x52,
	0x7d, 0x8b, 0x34, 0xcf, 0x51, 0x69, 0x96, 0x97, 0x26, 0x39, 0xf8, 0x6d, 0xc1, 0xf3, 0x05, 0xe6,
	0x65, 0xc6, 0x34, 0x52, 0x4c, 0xb9, 0xd2, 0x92, 0x69, 0x2e, 0x0a, 0x8a, 0x9b, 0x0a, 0x95, 0x26,
	0x31, 0xf4, 0xbb, 0x14, 0xd7, 0xf2, 0xad, 0xf1, 0x60, 0xe2, 0x85, 0x06, 0x1a, 0xb6, 0xd0, 0x70,
	0xd1, 0x2a, 0xe8, 0x5e, 0x4c, 0x46, 0xd0, 0x97, 0x06, 0xf2, 0x69, 0xed, 0xda, 0xbe, 0x35, 0xee,
	0xd3, 0xfd, 0x05, 0xf1, 0xe0, 0xa1, 0x6e, 0x9e, 0x75, 0x9d, 0xfa, 0x63, 0x17, 0x07, 0x5f, 0x61,
	0x74, 0xde, 0x92, 0x2a, 0x45, 0xa1, 0xf0, 0x98, 0x6c, 0x9d, 0x92, 0x5f, 0x00, 0xb4, 0xa4, 0xee,
	0xe1, 0x83, 0x9b, 0xe0, 0x8f, 0x0d, 0x8f, 0x68, 0xdd, 0x9f, 0xbb, 0xae, 0xf1, 0xd8, 0x89, 0x73,
	0xea, 0x84, 0x6c, 0x80, 0x98, 0x41, 0xf1, 0x22, 0xfd, 0xcc, 0x24, 0x67, 0x49, 0x86, 0xca, 0xbd,
	0xef, 0x3b, 0xe3, 0xc1, 0xe4, 0x7d, 0x78, 0x65, 0xee, 0x47, 0xf6, 0x9b, 0xe8, 0x90, 0x31, 0x2b,
	0xb4, 0xdc, 0xd2, 0x33, 0x70, 0x6f, 0x06, 0xcf, 0x2e, 0xc8, 0xc9, 0x10, 0x9c, 0x9f, 0xb8, 0x6d,
	0xfa, 0xf9, 0xef, 0x48, 0x9e, 0xc0, 0x83, 0x5f, 0x2c, 0xab, 0xb0, 0xa9, 0xcc, 0x04, 0x53, 0x3b,
	0xb6, 0x82, 0x8f, 0xf0, 0xb8, 0xf5, 0x70, 0xd3, 0x4c, 0x9e, 0x42, 0x4f, 0xa2, 0xaa, 0x32, 0xdd,
	0xa0, 0x9a, 0x68, 0xb2, 0xb3, 0xc1, 0x9d, 0x77, 0x75, 0xd2, 0xba, 0x4c, 0xda, 0x54, 0x49, 0x18,
	0xf4, 0xcc, 0x99, 0xbc, 0xba, 0xb9, 0x19, 0xde, 0xeb, 0x5b, 0xa4, 0xc6, 0x73, 0x70, 0x8f, 0xec,
	0x2c, 0x18, 0x9a, 0x15, 0x43, 0xd9, 0xae, 0x1c, 0x79, 0x77, 0x0d, 0x71, 0xe5, 0x5f, 0xf1, 0xe2,
	0xff, 0x4f, 0x6c, 0x9d, 0x7c, 0x98, 0x7e, 0x89, 0x53, 0xae, 0xbf, 0x57, 0x49, 0xb8, 0x12, 0x79,
	0x34, 0x97, 0xe2, 0x07, 0xae, 0xf4, 0x9b, 0x7d, 0x6f, 0xa2, 0xcb, 0xe8, 0xa4, 0x57, 0x2f, 0xe9,
	0xdb, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x78, 0xbe, 0xfa, 0xfd, 0x2b, 0x04, 0x00, 0x00,
}
